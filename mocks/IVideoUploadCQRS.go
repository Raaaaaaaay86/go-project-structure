// Code generated by mockery v2.9.6. DO NOT EDIT.

package mocks

import (
	upload "github.com/raaaaaaaay86/go-project-structure/domain/context/media/video"
	mock "github.com/stretchr/testify/mock"
)

// IVideoUploadCQRS is an autogenerated mock type for the IVideoUploadCQRS type
type IVideoUploadCQRS struct {
	mock.Mock
}

// Execute provides a mock function with given fields: cmd
func (_m *IVideoUploadCQRS) Execute(cmd upload.UploadVideoCommand) (*upload.UploadVideoResponse, error) {
	ret := _m.Called(cmd)

	var r0 *upload.UploadVideoResponse
	if rf, ok := ret.Get(0).(func(upload.UploadVideoCommand) *upload.UploadVideoResponse); ok {
		r0 = rf(cmd)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*upload.UploadVideoResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(upload.UploadVideoCommand) error); ok {
		r1 = rf(cmd)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIVideoUploadCQRS interface {
	mock.TestingT
	Cleanup(func())
}

// NewIVideoUploadCQRS creates a new instance of IVideoUploadCQRS. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIVideoUploadCQRS(t mockConstructorTestingTNewIVideoUploadCQRS) *IVideoUploadCQRS {
	mock := &IVideoUploadCQRS{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
