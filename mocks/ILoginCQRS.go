// Code generated by mockery v2.9.6. DO NOT EDIT.

package mocks

import (
	login "github.com/raaaaaaaay86/go-project-structure/domain/context/auth"
	mock "github.com/stretchr/testify/mock"
)

// ILoginCQRS is an autogenerated mock type for the ILoginCQRS type
type ILoginCQRS struct {
	mock.Mock
}

// Execute provides a mock function with given fields: cmd
func (_m *ILoginCQRS) Execute(cmd login.LoginUserCommand) (*login.LoginUserResponse, error) {
	ret := _m.Called(cmd)

	var r0 *login.LoginUserResponse
	if rf, ok := ret.Get(0).(func(login.LoginUserCommand) *login.LoginUserResponse); ok {
		r0 = rf(cmd)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*login.LoginUserResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(login.LoginUserCommand) error); ok {
		r1 = rf(cmd)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewILoginCQRS interface {
	mock.TestingT
	Cleanup(func())
}

// NewILoginCQRS creates a new instance of ILoginCQRS. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewILoginCQRS(t mockConstructorTestingTNewILoginCQRS) *ILoginCQRS {
	mock := &ILoginCQRS{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
